.. title: Updates 2018/09/16
.. slug: updates-2018-09-16
.. date: 2018-09-16 10:53:00 UTC+13:00
.. tags: 
.. category: 
.. link: 
.. description: 
.. type: text
.. author: FracPete

It has been a while, I know. Been visiting clients and preparing to go live
with some large ADAMS-based systems. On the data transformation side of things,
there are a few more PLS variants available. For image processing, there is
now better support for VIA/VGG annotations and data available. The experimental
CNTK Java integration has been removed, too hard to maintain as it is tied
to a specific CNTK version.

**Fixes**

* The Flow editor no longer saves expanded external flows.


**Changes**

* The *Copy (plain text)* operation in the Flow editor tree popup menu now
  uses the compact format as well.
* The *Flow* control actor now allows to specify a restart manager. This 
  allows the monitoring of flow(s)/setup file(s) by a flow that runs
  as a background service (daemon or Windows service), triggering its
  restart.
* Added a GOE editor for the *BaseInterval* class.
* *adams-rsync:* updated the rsync4j library to 3.1.12-12
* *adams-weka:* upgraded multisearch library to 2018.8.16
* *adams-weka* and *adams-lts*: 

  * upgraded matrix-algorithms to 0.0.11
  * the filter *PartitionedMultiFilter2* now allows specification of prefixes 
    for the filters rather than just using 'filtered'

* *adams-imaging:* 
  
  * *MergeObjectLocations* can now just merge all locations 
    when using minOverlapRatio=0.0 and overlapAction=KEEP
  * *ViaAnnotations* transformer has been removed.

* *adams-cntk:* removed the experimental CNTK Java bindings, as they too hard
  to maintain and strictly limited to a specific release of CNTK.
* *adams-cntk-weka* and *adams-cntk-weka-lts*: removed any code that relied
  on the experimental CNTK Java bindings.


**Additions**

* Added menu item *Copy actor path* to the Flow editor's popup menu.
* Added class hierarchy for conversions that swap out objects and concrete 
  *SwapObjects* implementation for replacing one object with another, using 
  their command-lines.
* *adams-meta:* 

  * added actor wrappers for auto-generated actors, which can get 
    removed using the *RemoveAutogeneratedActors* processor: 
    *AutogeneratedStandalone*, *AutogeneratedSource*, *AutogeneratedTransformer*,
    *AutogeneratedSink*
  * added actor wrappers for inactive actors (actors that don't get executed, 
    but kept for reference), which can get activated again using the 
    *ReactivateActors* processor: 
    *InactiveStandalone*, *InactiveSource*, *InactiveTransformer*, *InactiveSink*
  
* *adams-net:* 

  * added *MarkdownToHTML* conversion for converting Markdown string into HTML string

* *adams-weka* and *adams-lts*: 

  * added more PLS algorithms: DIPLS, PRM, VCPLS
  * added *SwapPLS* conversion for replacing PLS algorithm (with optional migration 
    of number of components)

* *adams-imaging:* 

  * added *ViaAnnotationsReportReader* and *ViaAnnotationsReportWriter*
    for the VGG Image Annotator JSON file format (http://www.robots.ox.ac.uk/~vgg/software/via/).
  * added *TrimapColorizer* BufferedImageTransformer and *TrimapImageHandler*
    for the preview browser (see https://stackoverflow.com/questions/41777654/opencv-using-a-trimap-image#41778637).
  * added report reader *VggXmlAnnotationReportReader* and preview browser handler
    *VggXmlAnnotationHandler*.

* *adams-spectral-2dim-core:* added the *RowWiseSpreadSheetSampleDataReader* sample 
  data reader.

