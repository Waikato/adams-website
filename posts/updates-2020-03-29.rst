.. title: Updates 2020/03/29
.. slug: updates-2020-03-29
.. date: 2020-03-29 10:37:00 UTC+13:00
.. tags: 
.. status: 
.. category: 
.. link: 
.. description: 
.. type: text
.. author: FracPete

The biggest change was moving the debug view of the Flow editor into the side panel, 
making it less confusing when debugging multiple flows. The Preview browser can now
reuse previews (and therefore keeping the setup in the view), making flicking through
images much more responsive. Apart from that, a bunch of bug fixes and little improvements.

**Fixes**

* The *Preview browser* now handles errors better that occur while generating previews.
* File choosers with a filter text field now only show items that match the filter and
  the selected file format.
* The *Debug* view in the Flow editor has been integrated into the side panel of the 
  editor window rather than being display as separate frame (this also applies to all
  the flow execution listeners). This makes it easier to debug several flows in parallel,
  as the view changes based on what flow has been selected in the editor. It is still
  possible to detach the view and display it in a separate frame via the right-click
  popup menu on the tab title.
* *adams-moa:* compiled a custom (unofficial) version of MOA to bundle with ADAMS to
  fix compatibility issue of jclasslocator library versions between MOA (0.0.12)
  and ADAMS (0.0.15).
* *adams-weka* and *adams-weka-lts*: 

  * The *WekaSpreadSheetToPredictions* transformer now handles spreadsheets with string 
    labels in the actual/predicted columns, not just when containing numeric label indices.
  * The *ConfusionMatrix* output generators in the Classify tab of the *Weka Investigator* 
    now maintain the order of the class labels from the dataset.
  * When deserializing a session, the data tables (eg in the Preprocessing tab) get resized
    using optimial column widths, instead of using a width of only a few pixels.
  * Setting/updating/removing column filters on the *Data* tab in the Weka Investigator now
    gets applied to the correct column.
  * The *Weka Multi-Experimenter* no longer generates a NullPointerException.


**Changes**

* The generic search panel now allows toggling between regular expression search and
  simple sub-string search via its popup menu of the text field.
* Containers now make use of the more intelligent plain text rendering available
  through the adams.data.textrenderer.TextRenderer class hierarchy. Speeds up debugging
  of large objects, like spreadsheets.
* Added support for caching previews and reusing them in the Preview browser. However, 
  reuse is currently only supported by image preview handlers.
* *adams-imaging:* 

  * The *ObjectLocationsSpreadSheetReader* report reader can add polygon coordinates 
    to the report as well (as long as X and Y coordinates are present in two 
    separate columns).
  * The *ByMetaDataNumericValue* object filter now allows using x/y/width/height as 
    key as well.
  * The *left-click* processors in the *ImageViewer* can now specify what additional
    keys have to be pressed (shift/alt/ctrl/meta).
  * The following content handlers in the *Preview browser* now support an optional
    alternative location for meta-data: *ObjectCentersFromReport*, *ObjectLocationsFromReport*,
    *ObjectLocationsFromSpreadSheet*.

* *adams-ml:* The *ConfusionMatrix* transformer now offers the *classLabels* option
  for enforcing the order of labels in the matrix.
* *adams-weka* and *adams-weka-lts*: 

  * The *WekaSpreadSheetToPredictions* transformer now allows sorting of labels with 
    a specified comparator.
  * The *SimpleArffLoader* now supports the sparse ARFF format as well.

* *adams-weka*: 

  * upgraded multisearch-weka-package to 2020.2.17
  * upgraded Weka to 3.9.4-fork-0.0.1

* *adams-weka-lts:*

  * upgraded Weka to 3.9.0-fork-0.0.9

* *adams-spectral-2dim-core*: The *WekaFilter* post-processor can now turn off 
  wrapping in a SpectrumFilter (on by default).


**Additions**

* *adams-imaging:* 

  * Added the *MergeGrid* multi-image operation for combining images
    generated by the SubImages/Grid operation. Combines the annotations as well, but does
    not remove duplicate or overlapping objects.
  * Added new *left-click* processors for the *ImageViewer*: ViewObjects, DeleteObjects, 
    AddMetaData.
  * Added report writer for object locations: *ObjectLocationsSpreadSheetWriter*
  * The object filter *AttachOverlappingMetaData* allows the copying of meta-data between 
    overlapping objects, eg reference data. The meta-data is copied from a report in storage.

* *adams-weka* and *adams-weka-lts*: The *NominalToNumeric* filter allows you to either
  use the interal representation of the labels as numeric values or you can extract the 
  numeric part from the label via regular expression replacement.

